{"version":3,"sources":["components/Header/header.js","components/Search/search.js","components/Button/button.js","components/Nav/nav.js","utils/API.js","components/Book/book.js","components/BookList/bookList.js","pages/searchBooks.js","components/SavedBook/savedBook.js","components/SaveBooks/saveBooks.js","pages/savedBooks.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","className","Search","props","type","Button","children","onClick","Nav","href","query","axios","get","bookData","post","Book","state","saved","text","componentDidMount","setState","getStyle","saveFunction","saveGoogleBook","this","book","src","image","alt","title","description","author","link","target","Component","BookList","console","log","bookState","map","key","id","volumeInfo","previewLink","authors","length","join","imageLinks","thumbnail","saveBook","SearchBooks","books","search","searchBooks","API","then","res","data","items","catch","err","handleInputChange","event","name","value","handleFormSubmit","preventDefault","currentBook","onChange","placeholder","style","fontStyle","deleteGoogleBook","bind","_id","deleteBook","Saved","savedBooks","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.456e6bab.chunk.js","sourcesContent":["import React from 'react'\nimport \"./header.css\"\nfunction Header () {\n    return (\n        <div className=\"container-fluid\">\n            <h1>React Google Book Search</h1>\n            <h3>Search for and Save Books of Interest</h3>\n        </div>\n    )\n}\n\nexport default Header ","import React from \"react\";\n\n// This component lets us use a bootstrap input element without worrying about class names\n// or manually wrapping the input with a form-group div\n// All of the props passed to this component are spread onto the input element\nfunction Search(props) {\n  return (\n    <div className=\"input-group input-group-lg\">\n      <input className=\"form-control\" type=\"text\" {...props} />\n    </div>\n  );\n}\n\nexport default Search;\n","import React from \"react\";\n\n// Destructuring the type, className, children and onClick props, applying them to the button element\nfunction Button({ type = \"default\", className, children, onClick }) {\n  return (\n    <button onClick={onClick} className=\"btn btn-secondary\">\n      {children}\n    </button>\n  );\n}\n\nexport default Button;\n","import React from \"react\";\nimport \"./nav.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Nav () {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"/saved\">\n        SAVED BOOKS\n      </a>\n      <a className=\"navbar-brand\" href=\"/\">\n        SEARCH FOR NEW\n        <span className=\"sr-only\">(current)</span>\n    </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import axios from \"axios\";\n\nexport default {\n\n    googleBooks: function(query) {\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`)\n    },\n\n    getBook: function(id) {\n        return axios.get(\"/api/books/\" + id);\n    },\n\n    getBooks: function() {\n        return axios.get(\"/api/books\");\n    },\n\n    saveBook: function(bookData) {\n        return axios.post(\"/api/books\", bookData);\n    },\n    \n    deleteBook: function(id) {\n        return axios.delete(\"/api/books/\" + id);\n    }\n};","import React, { Component } from 'react'\nimport \"./book.css\"\n\nclass Book extends Component {\n\n    state = {\n        saved: false,\n        text: \"Save\"\n    }\n    \n    componentDidMount = () => {\n        this.setState({\n            saved: true\n        })\n    }\n\n    getStyle = () => {\n        if (this.state.text === \"Save\") {\n            this.setState({\n\n                text: \"Saved\"\n            })\n        }\n        else {\n            this.setState({\n                text: \"Save\"\n            })\n        }   \n    }\n\n\n\n    saveFunction = () => {\n\n        this.props.saveGoogleBook(this.props)\n        this.getStyle();\n    }\n\n        render() {\n\n            const { book } = this.props\n\n            return (\n\n                <div className=\"card mb-3\">\n                    <div className=\"row g-0\">\n                    <div className=\"col-md-4\">\n                    <img src={this.props.image} className=\"img-thumbnail\" alt={this.props.title}></img>\n                    </div>\n                    <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{this.props.title}</h5>\n                        <p className=\"card-text\">{this.props.description}</p>\n                        <p className=\"card-text\">Author: {this.props.author}</p>\n\n                        <a href={this.props.link}\n                            target=\"_black\"\n                            type=\"button\"\n                            className=\"btn btn-secondary\">\n                                Learn More\n                        </a>\n                        <button\n                                onClick={this.saveFunction}\n                                className=\"btn btn-secondary\">\n                                {this.state.text}\n                        </button>\n                        </div>\n                    </div>\n                    </div>\n\n                </div>\n\n            )\n        }\n\n    }\n\n\n    export default Book ","\nimport React, { Component } from 'react'\nimport Book from \"../Book/book\";\n\nclass BookList extends Component {\n\n\n    render() {\n\n        console.log(\"Props\", this.props.bookState)\n\n        return (\n            this.props.bookState.map((book) => (\n            <Book\n            key={book.id}\n            id={book.id}\n            title={book.volumeInfo.title}\n            link={book.volumeInfo.previewLink}\n            authors={book.volumeInfo.authors && book.volumeInfo.authors.length > 1 ? book.volumeInfo.authors.join(\", \") : book.volumeInfo.authors}\n            image={book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : \"https://secocms.cpa.texas.gov/sca-dev-kilimanjaro/img/no_image_available.jpeg\"}\n            description={book.volumeInfo.description}\n            saveBook={this.props.saveGoogleBook}\n            />\n        ))\n        )\n                           \n    }\n}\n\nexport default BookList","import React, { Component } from \"react\"\nimport Header from \"../components/Header/header\"\nimport Search from \"../components/Search/search\"\nimport Button from \"../components/Button/button\";\nimport Nav from \"../components/Nav/nav\"\nimport API from \"../utils/API\"\nimport BookList from \"../components/BookList/bookList\"\n\nclass SearchBooks extends Component {\n\n    state = {\n        books: [],\n        search: \"\"\n    };\n\n    \n    searchBooks = () => {\n        console.log(this.state.search)\n        API.googleBooks(this.state.search)\n            .then(res => {\n                this.setState({\n                books: res.data.items,\n                search: \"\"\n            })})\n            .catch(err => console.log(err));\n            \n    };\n\n    handleInputChange = event => {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.searchBooks();\n    };\n\n\n    saveGoogleBook = currentBook => {\n        console.log(currentBook)\n        API.saveBook({\n            id: currentBook.id,\n            title: currentBook.title,\n            authors: currentBook.authors,\n            description: currentBook.description,\n            image: currentBook.image,\n            link: currentBook.link\n        })\n        .then(res => console.log(\"Success\"))\n        .catch(err => console.log(\"Error\"))\n    }\n\n    render() {\n        return (\n            <div>\n\n            <Header/>\n            <Nav />\n\n            <div>\n            <Search\n                      name=\"search\"\n                      value={this.state.search}\n                      onChange={this.handleInputChange}\n                      placeholder=\"Search For a Books\"\n                    />\n                <Button\n                      onClick={this.handleFormSubmit}\n                      type=\"success\"\n                      className=\"input-lg\"\n                    >\n                        Search\n                </Button>\n            <div/>\n\n            {this.state.books.length ? (\n            <BookList\n            bookState={this.state.books}\n            saveBook={this.saveGoogleBook}\n            />\n            ) : (\n                <div>\n                    <hr/>\n                <p style={{fontStyle: \"italic\"}}>Search for Books...</p>\n                </div>\n            )}\n\n            </div>\n            </div>\n        )\n    }\n\n}    \n\nexport default SearchBooks","import React from 'react';\n\nfunction Book(props) {\n    const {title, authors, image, link, description, deleteGoogleBook} = props\n    return (\n        <div className=\"card mb-3\">\n        <div className=\"row g-0\">\n        <div className=\"col-md-4\">\n        <img src={image} className=\"card-img-top\" alt={title}></img>\n        </div>\n        <div className=\"col-md-8\">\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{title}</h5>\n            <p className=\"card-text\">{description}</p>\n            <p className=\"card-text\">Author: {authors}</p>\n\n            <a\n                href={link}\n                target=\"_black\"\n                className=\"btn btn-secondary\">\n                    Learn More\n            </a>\n            <button\n                onClick={deleteGoogleBook.bind(this, props)}\n                type=\"button\"\n                className=\"btn btn-secondary\">\n                    Delete\n            </button>\n\n        </div>\n        </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Book;","import React, { Component } from 'react';\nimport Book from \"../SavedBook/savedBook\";\n\nclass BookList extends Component {\n\n\n    render() {\n        console.log(\"Props\", this.props.bookState)\n        return (\n            this.props.bookState.map((book) => (\n            <Book\n            key={book._id}\n            id={book._id}\n            title={book.title}\n            link={book.link}\n            authors={book.authors && book.authors.length > 1 ? book.authors.join(\", \") : book.authors}\n            image={book.image ? book.image : \"https://secocms.cpa.texas.gov/sca-dev-kilimanjaro/img/no_image_available.jpeg\"}\n            description={book.description}\n            deleteBook={this.props.deleteGoogleBook}\n            />\n        ))\n        )\n                           \n    }\n}\n\nexport default BookList","import React, { Component } from \"react\"\nimport Header from \"../components/Header/header\"\nimport Nav from \"../components/Nav/nav\"\nimport API from \"../utils/API\"\nimport BookList from \"../components/SaveBooks/saveBooks\"\n\nclass Saved extends Component {\n\n    state = {\n        savedBooks: []\n    }\n\n    componentDidMount = () => {\n        API.getBooks()\n        .then(res => {\n            this.setState({\n                savedBooks: res.data\n            })\n            console.log(res);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    // deleteGoogleBook = currentBook => {\n    //     API.deleteBook( currentBook.id )\n    //     .then(res => {\n    //         console.log(\"You deleted this book:\", res);\n    //         this.getBooks();\n    //     })\n    //     .catch(err => {\n    //         console.log(\"This is the error\", err);\n    //     })\n    // }\n\n\n\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <Nav /> \n                <div>\n                {this.state.savedBooks.length ? (\n                    <BookList \n                    bookState={this.state.books}\n                    deleteGoogleBook={this.deleteGoogleBook}\n                    >\n                    </BookList>\n                 ) : (\n                    <div>\n                        <hr/>\n                    <p style={{fontStyle: \"italic\"}}>No results to display</p>\n                    </div>\n                )}\n                \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Saved","\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SearchBooks from \"./pages/searchBooks\";\nimport Saved from \"./pages/savedBooks\"\nimport \"./App.css\";\n \n\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <Router>\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={SearchBooks} />\n          <Route exact path=\"/saved\" component={Saved} />\n\n        </Switch>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}